{"version":3,"file":"transaction.cjs.production.min.js","sources":["../src/index.ts"],"sourcesContent":["'use strict';\n\ninterface ResultType {\n  msg: string;\n  success: boolean;\n}\n\nexport class Contract {\n  public feeLimitCommon: number = 150000000;\n\n  private errorMessage = (msg: string) => {\n    const error: ResultType = { success: false, msg };\n    return error;\n  };\n\n  private getTronWeb = (userTronweb = {}) => {\n    return Object.keys(userTronweb).length > 0\n      ? userTronweb\n      : (window as any).tronWeb;\n  };\n\n  trigger = async (\n    address: any,\n    functionSelector: any,\n    parameters = [],\n    options = {},\n    { tronweb = {} } = {}\n  ) => {\n    try {\n      const tronWeb = this.getTronWeb(tronweb);\n      if (!tronWeb.defaultAddress) return;\n      const transaction = await tronWeb.transactionBuilder.triggerSmartContract(\n        address,\n        functionSelector,\n        Object.assign({ feeLimit: this.feeLimitCommon }, options),\n        parameters\n      );\n\n      if (!transaction.result || !transaction.result.result) {\n        throw new Error(\n          'Unknown trigger error: ' + JSON.stringify(transaction.transaction)\n        );\n      }\n      return transaction;\n    } catch (error) {\n      return this.errorMessage(`error: ${error}`);\n    }\n  };\n\n  sign = async (transaction: any, { tronweb = {} } = {}) => {\n    try {\n      const tronWeb = this.getTronWeb(tronweb);\n      if (!tronWeb.defaultAddress) return;\n      const signedTransaction = await tronWeb.trx.sign(transaction);\n      return signedTransaction;\n    } catch (error) {\n      return this.errorMessage(`error: ${error}`);\n    }\n  };\n\n  broadcast = async (signedTransaction: any, { tronweb = {} } = {}) => {\n    try {\n      const tronWeb = this.getTronWeb(tronweb);\n      if (!tronWeb.defaultAddress) return;\n      const result = await tronWeb.trx.sendRawTransaction(signedTransaction);\n      return result;\n    } catch (error) {\n      return this.errorMessage(`error: ${error}`);\n    }\n  };\n\n  send = async (\n    address: any,\n    functionSelector: any,\n    parameters = [],\n    options = {},\n    { callbacks = () => {}, tronweb = {} } = {}\n  ) => {\n    try {\n      const transaction = await this.trigger(address, functionSelector, parameters, options, {\n        tronweb,\n      });\n\n      const signedTransaction = await this.sign(transaction?.transaction, {\n        tronweb,\n      });\n      const result = await this.broadcast(signedTransaction, tronweb);\n\n      if (result?.result) callbacks && callbacks();\n\n      return result;\n    } catch (error) {\n      return this.errorMessage(`error: ${error}`);\n    }\n  };\n\n  call = async (\n    address: string,\n    _functionSelector: any,\n    { tronweb = {}, abi = [] } = {}\n  ) => {\n    try {\n      const tronWeb = this.getTronWeb(tronweb);\n      if (!tronWeb.defaultAddress) return;\n      let contractInstance;\n      if (abi.length > 0) {\n        contractInstance = await tronWeb.contract(abi, address);\n      } else {\n        contractInstance = await tronWeb.contract().at(address);\n      }\n      const result = await contractInstance[_functionSelector].call().call();\n\n      return { result };\n    } catch (error) {\n      return this.errorMessage(`error: ${error}`);\n    }\n  };\n\n  view = async (\n    address: string,\n    _functionSelector: any,\n    parameters = [],\n    { tronweb = {} } = {}\n  ) => {\n    try {\n      const tronWeb = this.getTronWeb(tronweb);\n      if (!tronWeb.defaultAddress) return;\n      const result = await tronWeb.transactionBuilder.triggerSmartContract(\n        address,\n        _functionSelector,\n        { _isConstant: true },\n        parameters\n      );\n      return result && result.result ? result.constant_result : [];\n    } catch (error) {\n      this.errorMessage(`error: ${error}`);\n      return [];\n    }\n  };\n\n  deploy = async (\n    options: any,\n    address: string,\n    { callbacks = () => {}, tronweb = {} } = {}\n  ) => {\n    try {\n      const tronWeb = this.getTronWeb(tronweb);\n      if (!tronWeb.defaultAddress) return;\n      const transaction = await tronWeb.transactionBuilder.createSmartContract(\n        options,\n        address\n      );\n      const signedTransaction = await this.sign(transaction, tronWeb);\n      const result = await this.broadcast(signedTransaction, tronWeb);\n\n      if (result?.result) callbacks && callbacks();\n      return result;\n    } catch (error) {\n      return this.errorMessage(`error: ${error}`);\n    }\n  };\n\n  sendTrx = async (\n    toAddress: string,\n    amount: string | number,\n    fromAddress: string,\n    options: any,\n    { callbacks = () => {}, tronweb = {} } = {}\n  ) => {\n    try {\n      const tronWeb = this.getTronWeb(tronweb);\n      if (!tronWeb.defaultAddress) return;\n      const tradeObj = await tronWeb.transactionBuilder.sendTrx(\n        toAddress,\n        amount,\n        fromAddress,\n        options\n      );\n      const signedTransaction = await this.sign(tradeObj, tronWeb);\n      const result = await this.broadcast(signedTransaction, tronWeb);\n\n      if (result?.result) callbacks && callbacks();\n      return result;\n    } catch (error) {\n      return this.errorMessage(`error: ${error}`);\n    }\n  };\n\n  sendToken = async (\n    address: string,\n    amount: string | number,\n    tokenID: string | number,\n    privateKey: string,\n    { callbacks = () => {}, tronweb = {} } = {}\n  ) => {\n    try {\n      const tronWeb = this.getTronWeb(tronweb);\n      if (!tronWeb.defaultAddress) return;\n      const tradeObj = await tronWeb.transactionBuilder.sendToken(\n        address,\n        amount,\n        tokenID,\n        privateKey\n      );\n\n      const signedTransaction = await this.sign(\n        tradeObj?.transaction ? tradeObj.transaction : tradeObj,\n        tronWeb\n      );\n      const result = await this.broadcast(signedTransaction, tronWeb);\n\n      if (result?.result) callbacks && callbacks();\n      return result;\n    } catch (error) {\n      return this.errorMessage(`error: ${error}`);\n    }\n  };\n}\n\nexport const ContractInteract = new Contract();\n"],"names":["Contract","this","msg","success","userTronweb","Object","keys","length","window","tronWeb","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","address","functionSelector","parameters","options","_temp","_ref2$tronweb","tronweb","transaction","wrap","_context","prev","next","_this","getTronWeb","defaultAddress","abrupt","transactionBuilder","triggerSmartContract","assign","feeLimit","feeLimitCommon","sent","result","Error","JSON","stringify","t0","errorMessage","stop","_x","_x2","_x3","_x4","_x5","apply","arguments","_ref3","_callee2","_temp2","_ref4$tronweb","_context2","trx","sign","_x6","_x7","_ref5","_callee3","signedTransaction","_temp3","_ref6$tronweb","_context3","sendRawTransaction","_x8","_x9","_ref7","_callee4","_temp4","_ref8","_ref8$callbacks","callbacks","_ref8$tronweb","_context4","trigger","broadcast","_x10","_x11","_x12","_x13","_x14","_ref9","_callee5","_functionSelector","_temp5","_ref10","_ref10$tronweb","_ref10$abi","abi","contractInstance","_context5","contract","at","call","_x15","_x16","_x17","_ref11","_callee6","_temp6","_ref12$tronweb","_context6","_isConstant","constant_result","_x18","_x19","_x20","_x21","_ref13","_callee7","_temp7","_ref14","_ref14$callbacks","_ref14$tronweb","_context7","createSmartContract","_x22","_x23","_x24","_ref15","_callee8","toAddress","amount","fromAddress","_temp8","_ref16","_ref16$callbacks","_ref16$tronweb","tradeObj","_context8","sendTrx","_x25","_x26","_x27","_x28","_x29","_ref17","_callee9","tokenID","privateKey","_temp9","_ref18","_ref18$callbacks","_ref18$tronweb","_context9","sendToken","_x30","_x31","_x32","_x33","_x34","ContractInteract"],"mappings":"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"}